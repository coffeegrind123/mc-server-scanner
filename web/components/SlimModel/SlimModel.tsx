/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		Cube: THREE.Mesh;
		Cube001: THREE.Mesh;
		Cube002: THREE.Mesh;
		Cube003: THREE.Mesh;
		Cube004: THREE.Mesh;
		Cube005: THREE.Mesh;
	};
	materials: {};
};

const SlimModel = (props: JSX.IntrinsicElements['group']) => {
	const { nodes, materials } = useGLTF('/models/slim.glb') as GLTFResult;
	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes.Cube.geometry}
				material={nodes.Cube.material}
				position={[-0.13, 0.38, 0]}
				scale={[2.18, 2.31, 0.67]}
			/>
			<mesh
				geometry={nodes.Cube001.geometry}
				material={nodes.Cube001.material}
				position={[0.12, 0.38, 0]}
				scale={[2.18, 2.31, 0.67]}
			/>
			<mesh
				geometry={nodes.Cube002.geometry}
				material={nodes.Cube002.material}
				position={[-0.01, 1.13, 0]}
				scale={[4.36, 2.31, 0.67]}
			/>
			<mesh
				geometry={nodes.Cube003.geometry}
				material={nodes.Cube003.material}
				position={[-0.35, 1.13, 0]}
				scale={[1.64, 2.31, 0.67]}
			/>
			<mesh
				geometry={nodes.Cube004.geometry}
				material={nodes.Cube004.material}
				position={[0.33, 1.13, 0]}
				scale={[1.64, 2.31, 0.67]}
			/>
			<mesh
				geometry={nodes.Cube005.geometry}
				material={nodes.Cube005.material}
				position={[-0.01, 1.75, 0]}
				scale={[4.36, 1.54, 1.34]}
			/>
		</group>
	);
};
export default SlimModel;

useGLTF.preload('/slim.glb');
